# Copyright Hans Dembinski 2016-2017
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

sudo: false
language: cpp

cache:
  pip: true
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.66.0

branches:
  only:
    - master
    - develop

matrix:
  include:
    - os: linux
      compiler: gcc
      env: SERIAL=OFF
    - os: linux
      compiler: gcc
      env: SERIAL=ON
    - os: linux
      compiler: clang
      env: SERIAL=ON
    - os: osx
      env: SERIAL=OFF
    - os: linux # coverage build
      compiler: gcc
      env: GCOV=gcov

git:
  depth: 1

# Install packages (pre-installed: pytest)
install:
  - source build/travis_install_boost.sh

  - if [ -n "$GCOV" ]; then
      pip install --user cpp-coveralls urllib3[secure];
    fi

script:
  - cd build
  - if [ -n "$GCOV" ]; then
      cmake . -DBOOST_ROOT=${BOOST_DIR}
              -DTEST_SERIALIZATION=ON
              -DCMAKE_BUILD_TYPE=coverage &&
      make -j2 &&
      ctest;
    else
      cmake . -DBOOST_ROOT=${BOOST_DIR}
              -DBUILD_BENCHMARKS=ON
              -DTEST_SERIALIZATION=${SERIAL}
              -DCMAKE_BUILD_TYPE=Debug &&
      make -j2 &&
      LSAN_OPTIONS=verbosity=1:log_threads=1 ASAN_OPTIONS=detect_leaks=0 ctest -V;
    fi

# Calculate coverage
after_success:
  if [ -n "$GCOV" ]; then
    coveralls -r .. -b . --verbose --exclude ${TRAVIS_BUILD_DIR}/deps  --gcov=`which ${GCOV}` --gcov-options '\-lpbc';
  fi

after_failure:
  # - otool -L histogram.so
  # - printf "r\nbt" > gdb.cmd
  # - for x in *_test; do
  #     $x || gdb $x --batch -x gdb.cmd;
  #   done

notifications:
  email: false
